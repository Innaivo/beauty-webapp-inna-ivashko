{"ast":null,"code":"var _jsxFileName = \"/home/inna/react-beauty/frontend/src/components/MapContainer.js\";\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      //Hides or the shows the infoWindow\n      activeMarker: {},\n      //Shows the active marker upon click\n      selectedPlace: {} //Shows the infoWindow to the selected place upon a marker\n\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 15,\n      initialCenter: {\n        lat: 51.443686,\n        lng: 5.479193\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Beauty Art',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.selectedPlace.name))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBylsKmHyljUWcHBomy2wpD0XeEPJ4S7-w'\n})(MapContainer);","map":{"version":3,"sources":["/home/inna/react-beauty/frontend/src/components/MapContainer.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","e","setState","onClose","render","google","lat","lng","name","apiKey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,UAAhC,EAA4CC,MAA5C,QAAyD,mBAAzD;AAEA,OAAO,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAC1CM,KAD0C,GAClC;AACNC,MAAAA,iBAAiB,EAAE,KADb;AACqB;AAC3BC,MAAAA,YAAY,EAAE,EAFR;AAEqB;AAC3BC,MAAAA,aAAa,EAAE,EAHT,CAGqB;;AAHrB,KADkC;;AAAA,SAM1CC,aAN0C,GAM1B,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAChB,KAAKC,QAAL,CAAc;AACZL,MAAAA,aAAa,EAAEE,KADH;AAEZH,MAAAA,YAAY,EAAEI,MAFF;AAGZL,MAAAA,iBAAiB,EAAE;AAHP,KAAd,CAP0C;;AAAA,SAa1CQ,OAb0C,GAahCJ,KAAK,IAAI;AACjB,UAAI,KAAKL,KAAL,CAAWC,iBAAf,EAAkC;AAChC,aAAKO,QAAL,CAAc;AACZP,UAAAA,iBAAiB,EAAE,KADP;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KApByC;AAAA;;AAsBxCQ,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,GAAD;AACA,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MADnB;AAEA,MAAA,IAAI,EAAE,EAFN;AAGA,MAAA,aAAa,EAAE;AACdC,QAAAA,GAAG,EAAE,SADS;AAEdC,QAAAA,GAAG,EAAE;AAFS,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQJ,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,KAAKT,aADhB;AAEE,MAAA,IAAI,EAAE,YAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARI,EAYJ,oBAAC,UAAD;AACE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWE,YADrB;AAEE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,iBAFtB;AAGE,MAAA,OAAO,EAAE,KAAKQ,OAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKT,KAAL,CAAWG,aAAX,CAAyBW,IAA9B,CADJ,CALA,CAZI,CADJ;AAwBH;;AA/CuC;AAkD5C,eAAelB,gBAAgB,CAAC;AAC5BmB,EAAAA,MAAM,EAAE;AADoB,CAAD,CAAhB,CAEVhB,YAFU,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker} from 'google-maps-react';\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {}          //Shows the infoWindow to the selected place upon a marker\n  };\n  onMarkerClick = (props, marker, e) =>\n  this.setState({\n    selectedPlace: props,\n    activeMarker: marker,\n    showingInfoWindow: true\n  });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n    render() {\n        return (\n            <Map\n            google={this.props.google}\n            zoom={15}\n            initialCenter={{\n             lat: 51.443686,\n             lng: 5.479193\n            }}\n            >\n        <Marker\n          onClick={this.onMarkerClick}\n          name={'Beauty Art'}\n        />\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n        <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n        </div>\n        </InfoWindow>\n            </Map>\n            )\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyBylsKmHyljUWcHBomy2wpD0XeEPJ4S7-w'\n  })(MapContainer);"]},"metadata":{},"sourceType":"module"}
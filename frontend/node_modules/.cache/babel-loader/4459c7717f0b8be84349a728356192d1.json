{"ast":null,"code":"var _jsxFileName = \"/home/inna/react-beauty/frontend/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst ServiceContext = React.createContext();\n\nclass ServiceProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      services: [],\n      loading: true\n    };\n\n    this.getService = slug => {\n      let tempServices = [...this.state.services];\n      const service = tempServices.find(service => service.slug === slug);\n      return service;\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    // this.getData\n    let services = this.formatData(items);\n    this.setState({\n      services,\n      loading: false\n    });\n  }\n\n  formatData(inItems) {\n    let tempItems = inItems.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let service = { ...item.fields,\n        images,\n        id\n      };\n      return service;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(ServiceContext.Provider, {\n      value: { ...this.state,\n        getService: this.getService\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ServiceConsumer = ServiceContext.Consumer;\nexport function withServiceConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(ServiceConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  };\n}\nexport { ServiceProvider, ServiceConsumer, ServiceContext };","map":{"version":3,"sources":["/home/inna/react-beauty/frontend/src/context.js"],"names":["React","Component","items","ServiceContext","createContext","ServiceProvider","state","services","loading","getService","slug","tempServices","service","find","componentDidMount","formatData","setState","inItems","tempItems","map","item","id","sys","images","fields","image","file","url","render","props","children","ServiceConsumer","Consumer","withServiceConsumer","ConsumerWrapper","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,MAAMC,cAAc,GAAGH,KAAK,CAACI,aAAN,EAAvB;;AAGC,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AACLC,MAAAA,QAAQ,EAAE,EADL;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADgC;;AAAA,SAyBzCC,UAzByC,GAyB5BC,IAAI,IAAI;AACjB,UAAIC,YAAY,GAAG,CAAC,GAAG,KAAKL,KAAL,CAAWC,QAAf,CAAnB;AACA,YAAMK,OAAO,GAAGD,YAAY,CAACE,IAAb,CAAkBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAA9C,CAAhB;AACA,aAAOE,OAAP;AACH,KA7BwC;AAAA;;AAKxC;AACAE,EAAAA,iBAAiB,GAAE;AACf;AACA,QAAIP,QAAQ,GAAG,KAAKQ,UAAL,CAAgBb,KAAhB,CAAf;AACA,SAAKc,QAAL,CAAc;AACXT,MAAAA,QADW;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAd;AAIH;;AAEDO,EAAAA,UAAU,CAAEE,OAAF,EAAW;AAClB,QAAIC,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAYC,IAAI,IAAI;AAChC,UAAIC,EAAE,GAAGD,IAAI,CAACE,GAAL,CAASD,EAAlB;AACA,UAAIE,MAAM,GAAGH,IAAI,CAACI,MAAL,CAAYD,MAAZ,CAAmBJ,GAAnB,CAAuBM,KAAK,IACrCA,KAAK,CAACD,MAAN,CAAaE,IAAb,CAAkBC,GADT,CAAb;AAEA,UAAIf,OAAO,GAAG,EAAC,GAAGQ,IAAI,CAACI,MAAT;AAAgBD,QAAAA,MAAhB;AAAuBF,QAAAA;AAAvB,OAAd;AACA,aAAOT,OAAP;AACH,KANe,CAAhB;AAOA,WAAOM,SAAP;AACF;;AAOEU,EAAAA,MAAM,GAAG;AACL,WACA,oBAAC,cAAD,CAAgB,QAAhB;AACA,MAAA,KAAK,EAAE,EAAE,GAAG,KAAKtB,KAAV;AACKG,QAAAA,UAAU,EAAE,KAAKA;AADtB,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,KAAKoB,KAAL,CAAWC,QAJb,CADA;AAQH;;AAxCoC;;AA4CzC,MAAMC,eAAe,GAAG5B,cAAc,CAAC6B,QAAvC;AAEA,OAAO,SAASC,mBAAT,CAA6BhC,SAA7B,EAAuC;AAC1C,SAAO,SAASiC,eAAT,CAAyBL,KAAzB,EAA+B;AAClC,WAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACFM,KAAK,IAAI,oBAAC,SAAD,oBAAeN,KAAf;AAAsB,MAAA,OAAO,EAAEM,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADP,CAAP;AAGH,GAJD;AAKH;AAED,SAAO9B,eAAP,EAAwB0B,eAAxB,EAAyC5B,cAAzC","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\nconst ServiceContext = React.createContext();\n\n\n class ServiceProvider extends Component {\n state = {\n    services: [],\n    loading: true\n };\n // getData\n componentDidMount(){\n     // this.getData\n     let services = this.formatData(items);\n     this.setState({\n        services,\n        loading: false\n    })\n }\n\n formatData (inItems) {\n    let tempItems = inItems.map(item => {\n        let id = item.sys.id;\n        let images = item.fields.images.map(image =>\n            image.fields.file.url);\n        let service = {...item.fields,images,id};\n        return service;\n    });\n    return tempItems;\n }\ngetService = slug => {\n    let tempServices = [...this.state.services];\n    const service = tempServices.find(service => service.slug === slug);\n    return service;\n}\n\n    render() {\n        return (\n        <ServiceContext.Provider \n        value={{ ...this.state,\n                    getService: this.getService }}\n        >\n         {this.props.children}\n        </ServiceContext.Provider>\n        );\n    }\n\n}\n\nconst ServiceConsumer = ServiceContext.Consumer;\n\nexport function withServiceConsumer(Component){\n    return function ConsumerWrapper(props){\n        return <ServiceConsumer>\n            {value => <Component {...props} context={value}/>}\n        </ServiceConsumer>\n    }\n}\n\nexport{ServiceProvider, ServiceConsumer, ServiceContext}"]},"metadata":{},"sourceType":"module"}